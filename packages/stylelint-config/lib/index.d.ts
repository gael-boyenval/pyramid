declare const _default: {
    plugins: string[];
    rules: {
        'at-rule-blacklist': string[];
        'at-rule-name-case': string;
        'at-rule-name-space-after': string;
        'at-rule-semicolon-newline-after': string;
        'block-closing-brace-newline-after': string;
        'block-closing-brace-newline-before': string;
        'block-closing-brace-space-before': string;
        'block-opening-brace-newline-after': string;
        'block-opening-brace-space-after': string;
        'block-opening-brace-space-before': string;
        'block-no-empty': boolean;
        'color-hex-case': string;
        'color-hex-length': string;
        'color-named': string;
        'color-no-invalid-hex': boolean;
        'comment-whitespace-inside': string;
        'declaration-bang-space-after': string;
        'declaration-bang-space-before': string;
        'declaration-block-no-duplicate-properties': (boolean | {
            ignore: string[];
        })[];
        'comment-empty-line-before': (string | {
            except: string[];
            ignore: string[];
        })[];
        'declaration-block-semicolon-newline-after': string;
        'declaration-block-semicolon-space-before': string;
        'declaration-block-single-line-max-declarations': number;
        'declaration-block-trailing-semicolon': string;
        'declaration-colon-newline-after': string;
        'declaration-colon-space-after': string;
        'declaration-colon-space-before': string;
        'declaration-property-value-blacklist': {
            '/^transition/': string[];
            '/^background/': string[];
            '/^border/': string[];
            '/.+/': string[];
        };
        'font-family-name-quotes': string;
        'function-calc-no-unspaced-operator': boolean;
        'function-comma-newline-after': string;
        'function-comma-space-after': string;
        'function-comma-space-before': string;
        'function-linear-gradient-no-nonstandard-direction': boolean;
        'function-max-empty-lines': number;
        'function-name-case': string;
        'function-parentheses-newline-inside': string;
        'function-parentheses-space-inside': string;
        'function-url-quotes': string;
        'function-whitespace-after': string;
        indentation: number;
        'length-zero-no-unit': boolean;
        'max-empty-lines': number;
        'max-nesting-depth': number;
        'media-feature-colon-space-after': string;
        'media-feature-colon-space-before': string;
        'media-feature-parentheses-space-inside': string;
        'media-feature-range-operator-space-after': string;
        'media-feature-range-operator-space-before': string;
        'media-query-list-comma-newline-after': string;
        'media-query-list-comma-space-after': string;
        'media-query-list-comma-space-before': string;
        'no-duplicate-selectors': boolean;
        'no-eol-whitespace': boolean;
        'no-extra-semicolons': boolean;
        'no-missing-end-of-source-newline': boolean;
        'number-leading-zero': string;
        'number-no-trailing-zeros': boolean;
        'property-case': string;
        'property-no-vendor-prefix': boolean;
        'rule-empty-line-before': (string | {
            except: string[];
            ignore: string[];
        })[];
        'selector-attribute-brackets-space-inside': string;
        'selector-attribute-operator-space-after': string;
        'selector-attribute-operator-space-before': string;
        'selector-combinator-space-after': string;
        'selector-combinator-space-before': string;
        'selector-list-comma-newline-after': string;
        'selector-list-comma-space-before': string;
        'selector-max-compound-selectors': number;
        'selector-max-empty-lines': number;
        'selector-max-id': number;
        'selector-max-specificity': string;
        'selector-no-qualifying-type': boolean;
        'selector-pseudo-class-case': string;
        'selector-pseudo-class-parentheses-space-inside': string;
        'selector-pseudo-element-case': string;
        'selector-pseudo-element-colon-notation': string;
        'selector-pseudo-element-no-unknown': boolean;
        'shorthand-property-no-redundant-values': boolean;
        'string-no-newline': boolean;
        'string-quotes': string;
        'unit-case': string;
        'unit-no-unknown': boolean;
        'value-list-comma-newline-after': string;
        'value-list-comma-space-after': string;
        'value-list-comma-space-before': string;
        'value-no-vendor-prefix': boolean;
        'plugin/pyramid': any;
    };
};
export default _default;
