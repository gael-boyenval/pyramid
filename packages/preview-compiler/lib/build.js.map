{"version":3,"sources":["../src/build.ts"],"names":["build","opts","config","basePath","distPath","glob","sync","srcPath","forEach","filePath","parsedPath","console","log"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,IAAMA,KAAK,GAAIC,IAAD,IAAoB;AAChC,MAAMC,MAAM,GAAGD,IAAf;AAEA,yCAAkBC,MAAM,CAACC,QAAzB,cAAqCD,MAAM,CAACE,QAA5C;;AAEAC,gBACGC,IADH,WACWJ,MAAM,CAACC,QADlB,cAC8BD,MAAM,CAACK,OADrC,2BAEGC,OAFH,CAEYC,QAAD,IAAc;AACrB,QAAMC,UAAU,GAAG,wBAAUR,MAAV,EAAkBO,QAAlB,CAAnB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACA,iCAAaA,UAAb,EAAyBD,QAAzB;AACD,GANH;AAOD,CAZD;;eAceT,K","sourcesContent":["import glob from 'glob';\nimport buildPreview from './processPreview';\nimport { createFullPath, parsePath } from './fsUtils';\n\nconst build = (opts: {}): void => {\n  const config = opts;\n  // we add the required directory in public folder\n  createFullPath(`${config.basePath}/${config.distPath}`);\n\n  glob\n    .sync(`${config.basePath}/${config.srcPath}/**/_previews/*.html`)\n    .forEach((filePath) => {\n      const parsedPath = parsePath(config, filePath);\n      console.log(parsedPath);\n      buildPreview(parsedPath, filePath);\n    });\n};\n\nexport default build;\n"],"file":"build.js"}